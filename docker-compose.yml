services:
  airflowdb:
    image: postgres
    environment:
      POSTGRES_DB: 'airflow'
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  dw:
    image: postgres
    environment:
      POSTGRES_DB: 'eicu_dw'
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - 54321:5432
    volumes:
      - ../dataset/data.csv:/import/data.csv

  airflow:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    restart: always
    environment:
      LOAD_EX: n
      EXECUTOR: Local
      AIRFLOW__CORE__FERNET_KEY: GmhP3ADRHscUZ2z_ohwMOmXlu5jFSI5IQRG0s-KrV_Y=
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@airflowdb:5432/airflow
      AIRFLOW_CONN_EICU_DW: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@dw:5432/eicu_dw"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ../dataset/data.csv:/import/data.csv
      - ./dbt/dbt_comp5339:/usr/local/airflow/dbt
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]

  superset:
    build:
      context: .
      dockerfile: ./superset/Dockerfile
      args:
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        SUPERSET_ADMIN: $SUPERSET_ADMIN
        SUPERSET_PASSWORD: $SUPERSET_PASSWORD
    ports:
      - "8088:8088"
    command: gunicorn --bind "0.0.0.0:8088" --access-logfile '-' --error-logfile '-' --workers 1 --worker-class gthread --threads 20 --timeout 60 --limit-request-line 0 --limit-request-field_size 0 "superset.app:create_app()"
    depends_on:
      - airflow
